xwayland enable

# Default terminal
set $term kitty

set $launcher $term --app-id launcher zsh -c "sh ~/.config/sway/launcher | xargs -0 swaymsg exec &>/dev/null"

# Setup wallpaper
output * bg ~/.config/sway/background.png fill

set $internal_display eDP-1

# Clamshell mode
bindswitch --locked lid:on kanshictl switch clamshell
bindswitch --locked lid:off kanshictl switch docked

exec_always cat /proc/acpi/button/lid/LID/state | awk '{print $2}' \
        | grep -q 'closed' && swaymsg output $internal_display disable

exec_always cat /proc/acpi/button/lid/LID/state | awk '{print $2}' \
        | grep -q 'open' && swaymsg output $internal_display enable

set $wobsock $XDG_RUNTIME_DIR/wob.sock

# Avoid idling when applications are fullscreen
for_window [app_id="^.*"] inhibit_idle fullscreen

# Move detached buttons for Android Emulator to scratchpad
for_window [class="Emulator" window_type="utility"] move scratchpad

# Set emulator size
for_window [class="Emulator" window_type="normal"] resize set width 472

# When running alacritty with "launcher class" make sure it's modal
for_window [app_id="^launcher$"] floating enable, border none, opacity 0.9, resize set 600px 400px

for_window [shell="xwayland"] title_format "[X11] %title%"

# Configure inputs
input "2:14:ETPS/2_Elantech_TrackPoint" {
    accel_profile flat
    pointer_accel 1
    dwt disabled
    dwtp disabled
}

input "type:touchpad" {
    dwt enabled
    tap enabled
}

input "type:keyboard" {
    xkb_layout se
    xkb_options caps:ctrl_modifier
}

### Key bindings

# Default modifier key
set $Mod Mod1

# Drag floating windows by holding down $Mod and left mouse button.
# Resize them with right mouse button + $Mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $Mod normal

# Mode for resizing containers
mode "resize" {
    bindsym {
        H resize shrink width 10px
        J resize grow height 10px
        K resize shrink height 10px
        L resize grow width 10px
        E mode "default"
        Q mode "default"
        Escape mode "default"
    }
}

# Power management mode
set $pwr_mode "(p)poweroff (r)eboot (s)uspend log(o)ut (l)ock re(c)onfig (q)uit"

mode $pwr_mode {
  bindsym {
    P       exec systemctl poweroff
    R       exec systemctl reboot
    S       exec systemctl suspend ; mode "default"
    O       exec loginctl terminate-session $XDG_SESSION_ID
    L       exec loginctl lock-session; mode "default"
    C       reload
    E       mode "default"
    Q       mode "default"
    Escape  mode "default"
  }
}

set $grim_area_display -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name')
set $grim_area_window -g "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"')"
set $grim_area_selection -g "$(slurp)"

set $grim_save_file $(xdg-user-dir PICTURES)/$(date +'%s_grim.png') && notify-send "Saved screenshot to file"
set $grim_save_clip - | wl-copy -p && notify-send "Saved screenshot to clipboard"

# Print screen mode
set $prt_sc_mode "PrtSc (m)onitor (w)indow (s)election (+Shift = save to file)"

mode $prt_sc_mode {
  bindsym {
          M exec grim $grim_area_display   $grim_save_clip
    Shift+M exec grim $grim_area_display   $grim_save_file
          W exec grim $grim_area_window    $grim_save_clip
    Shift+W exec grim $grim_area_window    $grim_save_file
          S exec grim $grim_area_selection $grim_save_clip
    Shift+S exec grim $grim_area_selection $grim_save_file

    E       mode "default"
    Q       mode "default"
    Escape  mode "default"
  }
}


bindsym {

    # Kill focused window
    $Mod+Shift+Q kill

    # Move your focus around
    $Mod+H focus left
    $Mod+J focus down
    $Mod+K focus up
    $Mod+L focus right

    # Move the focused window with the same, but add Shift
    $Mod+Shift+H move left
    $Mod+Shift+J move down
    $Mod+Shift+K move up
    $Mod+Shift+L move right

    # Switch to workspace
    $Mod+1 workspace number 1
    $Mod+2 workspace number 2
    $Mod+3 workspace number 3
    $Mod+4 workspace number 4
    $Mod+5 workspace number 5
    $Mod+6 workspace number 6
    $Mod+7 workspace number 7
    $Mod+8 workspace number 8
    $Mod+9 workspace number 9
    $Mod+0 workspace number 10

    # Move focused container to workspace
    $Mod+Shift+1 move container to workspace number 1
    $Mod+Shift+2 move container to workspace number 2
    $Mod+Shift+3 move container to workspace number 3
    $Mod+Shift+4 move container to workspace number 4
    $Mod+Shift+5 move container to workspace number 5
    $Mod+Shift+6 move container to workspace number 6
    $Mod+Shift+7 move container to workspace number 7
    $Mod+Shift+8 move container to workspace number 8
    $Mod+Shift+9 move container to workspace number 9
    $Mod+Shift+0 move container to workspace number 10

    # You can "split" the current object of your focus with
    # $Mod+b or $Mod+v, for horizontal and vertical splits
    # respectively.
    $Mod+B splith
    $Mod+V splitv

    # Switch the current container between different layout styles
    $Mod+W layout toggle stacking tabbed
    $Mod+E layout toggle split

    # Make the current focus fullscreen
    $Mod+Shift+Return fullscreen

    # Toggle the current focus between tiling and floating mode
    $Mod+Shift+Space floating toggle

    # Move the currently focused window to Sway's "scratchpad", 
    # which is a bag of holding for windows.
    # You can send windows there and get them back later.
    $Mod+Shift+Section move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    $Mod+Section scratchpad show

    $Mod+R      mode "resize"
    $Mod+Escape mode $pwr_mode
    Print       mode $prt_sc_mode

    # Start launcher
    $Mod+Space exec $launcher

    # Start a terminal
    $Mod+Return exec $term

    XF86AudioNext             exec playerctl next
    XF86AudioPrev             exec playerctl previous
    XF86AudioPlay             exec playerctl play-pause
    XF86AudioRaiseVolume      exec pamixer -ui 2 && pamixer --get-volume > $wobsock
    XF86AudioLowerVolume      exec pamixer -ud 2 && pamixer --get-volume > $wobsock
    XF86AudioMute             exec ([ "$(pamixer -t --get-mute)" = "true" ] && echo 0 > $wobsock) || pamixer --get-volume > $wobsock
    XF86AudioMicMute          exec pamixer --default-source -t
    XF86MonBrightnessDown     exec brightnessctl set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $wobsock
    XF86MonBrightnessUp       exec brightnessctl set +5% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $wobsock
    XF86NotificationCenter    input type:touchpad events toggle enabled disabled
}

default_border pixel
smart_borders on

set $font monospace 12

client.focused           #81a1c1 #81a1c1 #3b4252
client.focused_inactive  #4c566a #4c566a #eceff4
client.unfocused         #3b4252 #3b4252 #eceff4
client.urgent            #bf616a #bf616a #eceff4

font pango:$font

# Configure swaybar
bar {
    position top
    font pango:$font

    status_command sh $HOME/.config/sway/statusbar
    status_edge_padding 0
    status_padding 0

    colors {
        background         #3b4252
        statusline         #eceff4
        separator          #eceff4
        focused_workspace  #81a1c1 #81a1c1 #3b4252
        active_workspace   #4c566a #4c566a #eceff4
        inactive_workspace #3b4252 #3b4252 #eceff4
        urgent_workspace   #bf616a #bf616a #eceff4
    }
}

include /etc/sway/config.d/*

exec systemctl --user reset-failed

exec systemctl --user set-environment \
    WAYLAND_DISPLAY \
    SWAYSOCK \
    I3SOCK \
    XDG_RUNTIME_DIR \
    XDG_SESSION_TYPE \
    XDG_SESSION_DESKTOP

exec systemctl start --user sway-session.target
